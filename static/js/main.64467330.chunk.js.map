{"version":3,"sources":["DroppableLocation.js","Constants.js","Locations.js","App.js","serviceWorker.js","index.js"],"names":["DroppableLocation","_this","this","react_default","a","createElement","style","padding","minHeight","position","fontSize","fontWeight","textAlign","wordBreak","maxWidth","display","alignItems","justifyContent","props","name","react_beautiful_dnd_esm","Object","assign","placeholder","provided","snapshot","ref","innerRef","isDraggingOver","id","droppableId","background","width","children","Component","ITEMS","concat","ITEM_COPIES","Bow","Deku-Nut-Capacity","Deku-Stick-Capacity","Heart-Container","Hylian-Shield","Ocarina","Piece-of-Heart","Progressive-Hookshot","Progressive-Scale","Progressive-Strength-Upgrade","Progressive-Wallet","Slingshot","GS_FOREST_TEMPLE","LOCATIONS","The Forest","Kokiri Forest","Lost Woods","Deku Tree","Sacred Forest Meadow","Forest Temple","Zora's Domain","Zoras River","Zoras Domain","Jabu Jabus Belly","Ice Cavern","Death Mountain","Death Mountain Trail","Goron City","Dodongos Cavern","Death Mountain Crater","Fire Temple","Hyrule Field","Lon Lon Ranch","Hyrule Castle","Market","Ganons Castle","Kakariko","Kakariko Village","Bottom of the Well","Shadow Temple","Lake Hylia","Water Temple","The Desert","Gerudo Valley","Gerudo Fortress","Gerudo Training Grounds","Wasteland","Desert Colossus","Spirit Temple","Miscellaneous","Prizes","Songs","Pots","Enemies","Other","Gold Skulltulas","Dodongo","Jaby Jabu","Death Moutain","Zora's River","Desert","Shops","Kokiri","Goron","Zora","Market Potion","Market Bazaar","Bombchu","Kakariko Potion","Kakariko Bazaar","Scrubs","Dodongos","Jabu Jabu","Ganon's Castle","Death Moutain Crater","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","getItemStyle","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","junkPool","Arrows (10)","Arrows (30)","Arrows (5)","Bombchus (10)","Bombchus (20)","Bombchus (5)","Bombs (10)","Bombs (20)","Bombs (5)","Deku Nuts (10)","Deku Nuts (5)","Deku Seeds (30)","Deku Shield","Deku Stick (1)","Ice Trap","Recovery Heart","Rupee (1)","Rupees (20)","Rupees (200)","Rupees (5)","Rupees (50)","mt","MersenneTwister19937","autoSeed","assignJunk","keys","length","Error","item","randomPick","Locations","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reset","state","unassigned","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","i","numCopies","push","err","return","_arr","values","_i","locationGroup","_arr2","_i2","locationArea","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setState","getList","onDragEnd","items","defineProperty","export","entries","forEach","_ref","_ref2","key","test","split","slice","join","json","JSON","stringify","blob","Blob","type","blobURL","URL","createObjectURL","window","open","e","alert","message","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_arr3","_i3","_arr4","_i4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","location","_this2","float","onClick","marginLeft","maxHeight","overflowY","DroppableLocation_DroppableLocation","map","draggableId","draggableProps","dragHandleProps","esm","locationName","_ref3","_ref4","locationArray","flexWrap","flex","isDropDisabled","App","Locations_Locations","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+RAYqBA,mLACR,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,EAAGC,UAAW,IAAKC,SAAU,aAC/CN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACI,SAAU,GAAIC,WAAY,OAAQC,UAAW,SAAUC,UAAW,aAAcC,SAAU,IAAKN,UAAW,GAAIO,QAAS,OAAQC,WAAY,SAAUC,eAAe,WAAYf,KAAKgB,MAAMC,OAE5MhB,EAAAC,EAAAC,cAACe,EAAA,EAADC,OAAAC,OAAA,GAAepB,KAAKgB,MAApB,CAA2BK,YAAY,SAClC,SAACC,EAAUC,GAAX,OACGtB,EAAAC,EAAAC,cAAA,OACIqB,IAAKF,EAASG,SACdrB,OAlBNsB,EAkB0BH,EAASG,eAlBnBC,EAkBmC5B,EAAKiB,MAAMY,YAlBtC,CAC1CC,WAAYH,EAAiB,YAAc,YAC3CrB,QAJS,EAKTyB,MAAO,IACPxB,UAAkB,eAAPqB,EAAsB,IAAM,MAgBd5B,EAAKiB,MAAMe,SACXT,EAASD,aArBjB,IAACK,EAAgBC,YAOSK,aCiFlCC,EAAK,GAAAC,OA7FmB,CACnC,iBACA,aACA,gBACA,kBACA,mBACA,iBACA,kBACA,mBACA,oBAGmB,CACnB,iBACA,cACA,eACA,mBACA,qBACA,mBACA,oBACA,cACA,oBACA,iBACA,eACA,YACA,kBAGyB,CACzB,iBACA,WACA,YACA,0BACA,qBACA,yBACA,SACA,MACA,oBACA,cACA,sBACA,YACA,iBACA,cACA,cACA,SACA,kBACA,cACA,gBACA,aACA,aACA,eACA,gBACA,eACA,cACA,gBACA,cACA,UACA,uCACA,iBACA,aACA,uBACA,oBACA,+BACA,qBACA,iBACA,YACA,iBACA,YACA,eA2BWC,EAAc,CACzBC,IAAO,EACPC,oBAAqB,EACrBC,sBAAuB,EACvBC,kBAAmB,EACnBC,gBAAiB,EACjBC,QAAW,EACXC,iBAAkB,GAClBC,uBAAwB,EACxBC,oBAAqB,EACrBC,+BAAgC,EAChCC,qBAAsB,EACtBC,UAAa,GAmnBFC,EAAmB,CAC9B,gCACA,8BACA,gCACA,yBACA,6BAqXWC,EAAY,CACvBC,aAAa,CACXC,gBAz7ByB,CACzB,qBACA,sBACA,uBACA,yBACA,0BACA,kBACA,qCAm7BAC,aAh7BsB,CACtB,YACA,sBACA,kBACA,mCACA,kCACF,0BACA,6BACA,yCAy6BEC,YApvBqB,CACrB,wBACA,0BACA,oCACA,2BACA,4BACA,sCACA,qBA8uBAC,uBAv6BgC,CAChC,uBAu6BAC,gBAvrByB,CACzB,4BACA,mCACA,uCACA,2BACA,0BACA,mCACA,iCACA,+BACA,kCACA,0BACA,8BACA,+BACA,gCACA,wBA2qBFC,gBAAgB,CACdC,cA/wBuB,CACvB,oBACA,oBACA,oCACA,oCACA,wCA2wBAC,eAxwBwB,CACxB,kBACA,yBACA,mBACA,0CACA,yCACA,+BAmwBAC,mBAltB4B,CAC5B,kBACA,6BACA,iCACA,kBA+sBAC,aAjmBsB,CACtB,uBACA,2BACA,8BACA,gCA+lBFC,iBAAiB,CACfC,uBA9yBgC,CAChC,gCACA,4BACA,WACA,+BACA,gCA0yBAC,aAvyBsB,CACtB,iCACA,6BACA,8BACA,kCACA,yBACA,iBACA,gBAiyBAC,kBA5uB2B,CAC3B,4BACA,gCACA,uCACA,iCACA,sCACA,2BACA,sBAsuBAC,wBA/xBiC,CACjC,kCACA,qCACA,sBACA,8BA4xBAC,cA1oBuB,CACvB,8BACA,gCACA,6BACA,iBACA,uCACA,2CACA,uCACA,uCACA,qCACA,wCACA,8BACA,wBACA,4BACA,kCACA,qCA6nBFC,eAAe,CACbA,eAp7BwB,CACxB,kBACA,+BACF,6CACA,sCACA,sCACA,mCA+6BEC,gBA5wByB,CACzB,kBACA,mCA4wBFC,gBAAgB,CACdC,OA34BkB,CAClB,QACA,cACF,yBACA,2BACA,iCACA,sBACA,WACA,yBAo4BED,gBAj4ByB,CACzB,YACA,6BACA,iBA+3BAE,gBA53ByB,CAC3B,6BACA,8BACA,mCACA,uCACA,wCACA,yCACA,0CACA,yCACA,0CACA,6CACA,8CACA,6CACA,8CACA,+CACA,8CACA,oDACA,0CACA,mCACA,iCACA,kCACA,mCACA,mCACA,oCAu2BAC,SAAW,CACTC,mBAr1B4B,CAC9B,cACA,gBACA,iBACA,2BACA,2BACA,2BACA,2BACA,2BACA,8BACA,4BACA,yBACA,6BACA,oBACA,qBACA,0BACA,uBACA,iBACA,8BACA,sBACA,8BAk0BEC,qBAhrB8B,CAC9B,4CACA,2CACA,8CACA,wCACA,wCACA,wCACA,sCACA,iCACA,qCACA,4CACA,2CACA,oCACA,iCACA,yCAmqBAC,gBAhlByB,CACzB,0BACA,kCACA,8BACA,yCACA,+CACA,iDACA,2CACA,2CACA,4CACA,uCACA,iCACA,gCACA,uCACA,wCACA,uCACA,+BACA,yCACA,sBAgkBFC,aAAa,CACXA,aAz7BsB,CACtB,oBACA,iBACA,8BACA,oBACA,gBACA,iBAo7BAC,eA5mBwB,CACxB,eACA,yBACA,6BACA,kCACA,6BACA,4BACA,wCACA,8BACA,oCACA,+BACA,6BAmmBFC,aAAa,CACXC,gBAp7ByB,CACzB,2CACA,uCACA,oCAk7BAC,kBA/6B2B,CAC3B,gCACA,gCACA,gCACA,kCACA,qCACA,qCACA,qCACA,sCAw6BAC,0BA5iBmC,CACnC,2CACA,4CACA,wCACA,uCACA,+CACA,gDACA,iDACA,gDACA,gDACA,mDACA,gDACA,2CACA,wDACA,kDACA,mDACA,2CACA,+CACA,mDACA,kDACA,mDACA,kDACA,oDAuhBAC,UAt6BqB,CACrB,oCACA,sCAq6BAC,kBAl6B2B,CAC3B,4BACA,gCAi6BAC,gBAlgByB,CACzB,iCACA,kCACA,uCACA,wCACA,8BACA,wCACA,yCACA,wCACA,0BACA,qCACA,kCACA,mCACA,yBACA,sBACA,sCACA,6CACA,8CACA,+BACA,8BACA,mBAgfFC,cAAgB,CACdC,OAlgCkB,CAClB,eACA,cACA,eACA,WACA,gBACA,WACA,SACA,cACA,YA0/BAC,MAv/B0B,CAC5B,kBACA,4BACA,mBACA,2BACA,kBACA,iBACA,kBACA,oBACA,kBACA,sBACA,oBACA,qBA4+BEC,KApEgB,CAClB,uBACA,+BACA,yBACA,wBAiEEC,QA9DmB,CACrB,mBACA,kBA6DEC,MA1DiB,CACnB,QACA,0BACA,qCAyDAC,kBACA,CACEtC,YA9dwB,CAC1B,kCACA,6BACA,8BACA,6BA2dEuC,QAjduB,CACzB,yCACA,gCACA,0CACA,gCACA,sCA6cEC,YAlcwB,CAC1B,oCACA,oCACA,yBACA,kCA+bEtC,gBAAiBP,EACjBkB,cAAelB,EACf6B,eAvZ2B,CAC7B,iCACA,wCACA,+BACA,sCACA,iCAmZEF,gBAxX4B,CAC9B,oCACA,gCACA,oCACA,kCACA,8BAoXES,gBAzY4B,CAC9B,6CACA,gCACA,yBACA,uCACA,gCAqYEV,qBA1WiC,CACnC,yBACA,0BACA,2BAwWEd,aA/VyB,CAC3B,gCACA,qCACA,kCA6VEO,eApV2B,CAC7B,qCACA,gCACA,6BACA,6BACA,gCACA,yBA+UEhB,gBA5U4B,CAC9B,uBACA,8BACA,2BACA,uCACA,sCACA,4BACA,2BAsUEkB,gBAnU4B,CAC9B,4BACA,0BACA,wBACA,gCAgUEyB,gBA7T6B,CAC/B,gCACA,+BACA,gCACA,2CACA,mCACA,gCACA,6BACA,kCAsTEtB,SAnTuB,CACzB,uCACA,8BACA,4BACA,mBACA,yBACA,iCACA,oBACA,2BA4SEuB,eAzS0B,CAC5B,uBACA,qBACA,mCACA,6BACA,oCACA,iCACA,oCACA,2BAkSEnB,aA/RyB,CAC3B,2BACA,6BACA,yBACA,0BACA,4BA2REoB,OAxRqB,CACvB,8BACA,gCACA,0BACA,+BACA,mCACA,+BACA,gCACA,qBACA,0BACA,4BAiRAC,MAAQ,CACNC,OA/QuB,CACzB,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAwQEC,MAnMsB,CACxB,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBA4LEC,KA/MqB,CACvB,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAwMEC,gBAjP8B,CAChC,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCA0OEC,gBAv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","file":"static/js/main.64467330.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getListStyle = (isDraggingOver, id) => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 180,\n    minHeight: id === 'unassigned' ? 550 : 50\n});\n\nexport default class DroppableLocation extends Component {\n    render() {\n        return (\n            <div style={{padding: 1, minHeight: 175, position: 'relative'}}>\n                <div>\n                    <div style={{fontSize: 13, fontWeight: 'bold', textAlign: 'center', wordBreak: 'break-word', maxWidth: 196, minHeight: 34, display: 'flex', alignItems: 'center', justifyContent:'center'}}>{this.props.name}</div>\n                </div>\n                <Droppable {...this.props} placeholder='Junk'>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver, this.props.droppableId)}\n                        >\n                            {this.props.children}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </div>\n        );\n    }\n}\n","export const STONES_AND_MEDALLIONS = [\n  \"Kokiri-Emerald\",\n  \"Goron-Ruby\",\n  \"Zora-Sapphire\",\n  \"Light-Medallion\",\n  \"Forest-Medallion\",\n  \"Fire-Medallion\",\n  \"Water-Medallion\",\n  \"Shadow-Medallion\",\n  \"Spirit-Medallion\"\n];\n\nexport const SONGS = [\n  \"Bolero-of-Fire\",\n  \"Eponas-Song\",\n  \"Farores-Wind\",\n  \"Minuet-of-Forest\",\n  \"Nocturne-of-Shadow\",\n  \"Prelude-of-Light\",\n  \"Requiem-of-Spirit\",\n  \"Sarias-Song\",\n  \"Serenade-of-Water\",\n  \"Song-of-Storms\",\n  \"Song-of-Time\",\n  \"Suns-Song\",\n  \"Zeldas-Lullaby\"\n];\n\nexport const MAJOR_ITEMS = [\n  \"Biggoron-Sword\",\n  \"Bomb-Bag\",\n  \"Boomerang\",\n  \"Bottle-with-Blue-Potion\",\n  \"Bottle-with-Letter\",\n  \"Bottle-with-Red-Potion\",\n  \"Bottle\",\n  \"Bow\",\n  \"Deku-Nut-Capacity\",\n  \"Deku-Shield\",\n  \"Deku-Stick-Capacity\",\n  \"Dins-Fire\",\n  \"Double-Defense\",\n  \"Fire-Arrows\",\n  \"Goron-Tunic\",\n  \"Hammer\",\n  \"Heart-Container\",\n  \"Hover-Boots\",\n  \"Hylian-Shield\",\n  \"Ice-Arrows\",\n  \"Iron-Boots\",\n  \"Kokiri-Sword\",\n  \"Lens-of-Truth\",\n  \"Light-Arrows\",\n  \"Magic-Meter\",\n  \"Mirror-Shield\",\n  \"Nayrus-Love\",\n  \"Ocarina\",\n  \"Piece-of-Heart-(Treasure-Chest-Game)\",\n  \"Piece-of-Heart\",\n  \"Pocket-Egg\",\n  \"Progressive-Hookshot\",\n  \"Progressive-Scale\",\n  \"Progressive-Strength-Upgrade\",\n  \"Progressive-Wallet\",\n  \"Recovery-Heart\",\n  \"Slingshot\",\n  \"Stone-of-Agony\",\n  \"Weird-Egg\",\n  \"Zora-Tunic\"\n];\n\nexport const JUNK = [\n  \"Arrows-(10)\",\n  \"Arrows-(30)\",\n  \"Arrows-(5)\",\n  \"Bombchus-(10)\",\n  \"Bombchus-(20)\",\n  \"Bombchus-(5)\",\n  \"Bombs-(10)\",\n  \"Bombs-(20)\",\n  \"Bombs-(5)\",\n  \"Deku-Nuts-(10)\",\n  \"Deku-Nuts-(5)\",\n  \"Deku-Seeds-(30)\",\n  \"Deku-Stick-(1)\",\n  \"Ice-Trap\",\n  \"Rupee-(1)\",\n  \"Rupees-(20)\",\n  \"Rupees-(200)\",\n  \"Rupees-(5)\",\n  \"Rupees-(50)\"\n];\n\nexport const ITEMS = [...STONES_AND_MEDALLIONS, ...SONGS, ...MAJOR_ITEMS];\n\nexport const ITEM_COPIES = {\n  \"Bow\": 3,\n  \"Deku-Nut-Capacity\": 3,\n  \"Deku-Stick-Capacity\": 3,\n  \"Heart-Container\": 8,\n  \"Hylian-Shield\": 2,\n  \"Ocarina\": 2,\n  \"Piece-of-Heart\": 35,\n  \"Progressive-Hookshot\": 2,\n  \"Progressive-Scale\": 2,\n  \"Progressive-Strength-Upgrade\": 3,\n  \"Progressive-Wallet\": 2,\n  \"Slingshot\": 3\n};\n\nexport const JUNK_POOL = {\n  \"Arrows (10)\": 8,\n  \"Arrows (30)\": 6,\n  \"Arrows (5)\": 6,\n  \"Bombchus (10)\": 3,\n  \"Bombchus (20)\": 1,\n  \"Bombchus (5)\": 1,\n  \"Bombs (10)\": 2,\n  \"Bombs (20)\": 2,\n  \"Bombs (5)\": 4,\n  \"Deku Nuts (10)\": 1,\n  \"Deku Nuts (5)\": 2,\n  \"Deku Seeds (30)\": 3,\n  \"Deku Shield\": 4,\n  \"Deku Stick (1)\": 2,\n  \"Ice Trap\": 6,\n  \"Recovery Heart\": 11,\n  \"Rupee (1)\": 1,\n  \"Rupees (20)\": 8,\n  \"Rupees (200)\": 6,\n  \"Rupees (5)\": 19,\n  \"Rupees (50)\": 7\n};\n\nexport const PRIZES = [\n    \"Links-Pocket\",\n    \"Queen-Gohma\",\n    \"King-Dodongo\",\n    \"Barinade\",\n    \"Phantom-Ganon\",\n    \"Volvagia\",\n    \"Morpha\",\n    \"Bongo-Bongo\",\n    \"Twinrova\",\n];\n\nexport const SONG_LOCATIONS = [\n  \"Song-from-Saria\",\n  \"Song-from-Ocarina-of-Time\",\n  \"Song-at-Windmill\",\n  \"Song-from-Composer-Grave\",\n  \"Song-from-Malon\",\n  \"Impa-at-Castle\",\n  \"Sheik-at-Temple\",\n  \"Sheik-Forest-Song\",\n  \"Sheik-in-Crater\",\n  \"Sheik-in-Ice-Cavern\",\n  \"Sheik-in-Kakariko\",\n  \"Sheik-at-Colossus\",\n];\n\nexport const KOKIRI_FOREST = [\n    \"Kokiri-Sword-Chest\",\n    \"Mido-Chest-Top-Left\",\n    \"Mido-Chest-Top-Right\",\n    \"Mido-Chest-Bottom-Left\",\n    \"Mido-Chest-Bottom-Right\",\n    \"Gift-from-Saria\",\n    \"Kokiri-Forest-Storms-Grotto-Chest\",\n];\n\nexport const LOST_WOODS = [\n    \"Skull-Kid\",\n    \"Ocarina-Memory-Game\",\n    \"Target-in-Woods\",\n    \"LW-Deku-Scrub-Deku-Stick-Upgrade\",\n    \"Lost-Woods-Generic-Grotto-Chest\",\n  \"Deku-Theater-Skull-Mask\",\n  \"Deku-Theater-Mask-of-Truth\",\n  \"LW-Grotto-Deku-Scrub-Deku-Nut-Upgrade\",\n];\n\nexport const SACRED_FOREST_MEADOW = [\n    \"Wolfos-Grotto-Chest\",\n];\n\nexport const HYRULE_FIELD = [\n    \"Ocarina-of-Time\",\n    \"Remote-Southern-Grotto-Chest\",\n  \"Field-Near-Lake-Outside-Fence-Grotto-Chest\",\n  \"HF-Grotto-Deku-Scrub-Piece-of-Heart\",\n  \"Field-West-Castle-Town-Grotto-Chest\",\n  \"Tektite-Grotto-Freestanding-PoH\",\n];\n\nexport const LAKE_HYLIA = [\n    \"Underwater-Bottle\",\n    \"Lake-Hylia-Sun\",\n    \"Lake-Hylia-Freestanding-PoH\",\n    \"Diving-in-the-Lab\",\n    \"Child-Fishing\",\n    \"Adult-Fishing\",\n];\n\nexport const GERUDO_VALLEY = [\n    \"Gerudo-Valley-Waterfall-Freestanding-PoH\",\n    \"Gerudo-Valley-Crate-Freestanding-PoH\",\n    \"Gerudo-Valley-Hammer-Rocks-Chest\"\n];\n\nexport const GERUDO_FORTRESS = [\n    \"Gerudo-Fortress-Rooftop-Chest\",\n    \"Horseback-Archery-1000-Points\",\n    \"Horseback-Archery-1500-Points\",\n    \"Gerudo-Fortress-Membership-Card\",\n    \"Gerudo-Fortress-North-F1-Carpenter\",\n    \"Gerudo-Fortress-North-F2-Carpenter\",\n    \"Gerudo-Fortress-South-F1-Carpenter\",\n    \"Gerudo-Fortress-South-F2-Carpenter\",\n];\n\nexport const WASTELAND = [\n    \"Haunted-Wasteland-Structure-Chest\",\n    \"Haunted-Wasteland-Bombchu-Salesman\",\n];\n\nexport const DESERT_COLOSSUS = [\n    \"Colossus-Freestanding-PoH\",\n    \"Desert-Colossus-Fairy-Reward\",\n]\n\nexport const MARKET = [\n    \"Zelda\",\n    \"10-Big-Poes\",\n  \"Child-Shooting-Gallery\",\n  \"Bombchu-Bowling-Bomb-Bag\",\n  \"Bombchu-Bowling-Piece-of-Heart\",\n  \"Treasure-Chest-Game\",\n  \"Dog-Lady\",\n  \"Master-Sword-Pedestal\",\n]\n\nexport const HYRULE_CASTLE = [\n    \"Malon-Egg\",\n    \"Hyrule-Castle-Fairy-Reward\",\n    \"Zeldas-Letter\",\n];\n\nexport const GANONS_CASTLE = [\n  \"Ganons-Castle-Fairy-Reward\",\n  \"Ganons-Tower-Boss-Key-Chest\",\n  \"Ganons-Castle-Forest-Trial-Chest\",\n  \"Ganons-Castle-Water-Trial-Left-Chest\",\n  \"Ganons-Castle-Water-Trial-Right-Chest\",\n  \"Ganons-Castle-Shadow-Trial-First-Chest\",\n  \"Ganons-Castle-Shadow-Trial-Second-Chest\",\n  \"Ganons-Castle-Spirit-Trial-First-Chest\",\n  \"Ganons-Castle-Spirit-Trial-Second-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Left-Chest\",\n  \"Ganons-Castle-Light-Trial-First-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Second-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Third-Right-Chest\",\n  \"Ganons-Castle-Light-Trial-Invisible-Enemies-Chest\",\n  \"Ganons-Castle-Light-Trial-Lullaby-Chest\",\n  \"Ganons-Castle-Forest-Trial-Clear\",\n  \"Ganons-Castle-Fire-Trial-Clear\",\n  \"Ganons-Castle-Water-Trial-Clear\",\n  \"Ganons-Castle-Shadow-Trial-Clear\",\n  \"Ganons-Castle-Spirit-Trial-Clear\",\n  \"Ganons-Castle-Light-Trial-Clear\",\n]\n\nexport const GANONS_CASTLE_MQ = [\n  \"Ganons-Castle-MQ-Water-Trial-Chest\",\n  \"Ganons-Castle-MQ-Forest-Trial-First-Chest\",\n  \"Ganons-Castle-MQ-Forest-Trial-Second-Chest\",\n  \"Ganons-Castle-MQ-Light-Trial-Lullaby-Chest\",\n  \"Ganons-Castle-MQ-Shadow-Trial-First-Chest\",\n  \"Ganons-Castle-MQ-Shadow-Trial-Second-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-Golden-Gauntlets-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-Sun-Back-Right-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-Sun-Back-Left-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-Sun-Front-Left-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-First-Chest\",\n  \"Ganons-Castle-MQ-Spirit-Trial-Second-Chest\",\n  \"Ganons-Castle-MQ-Forest-Trial-Freestanding-Key\",\n]\n\nexport const KAKARIKO_VILLAGE = [\n  \"Man-on-Roof\",\n  \"Anju-as-Adult\",\n  \"Anjus-Chickens\",\n  \"10-Gold-Skulltula-Reward\",\n  \"20-Gold-Skulltula-Reward\",\n  \"30-Gold-Skulltula-Reward\",\n  \"40-Gold-Skulltula-Reward\",\n  \"50-Gold-Skulltula-Reward\",\n  \"Impa-House-Freestanding-PoH\",\n  \"Windmill-Freestanding-PoH\",\n  \"Adult-Shooting-Gallery\",\n  \"Graveyard-Freestanding-PoH\",\n  \"Gravedigging-Tour\",\n  \"Shield-Grave-Chest\",\n  \"Heart-Piece-Grave-Chest\",\n  \"Composer-Grave-Chest\",\n  \"Hookshot-Chest\",\n  \"Dampe-Race-Freestanding-PoH\",\n  \"Redead-Grotto-Chest\",\n  \"Kakariko-Back-Grotto-Chest\",\n];\n\nexport const DEATH_MOUNTAIN_TRAIL = [\n    \"Death-Mountain-Bombable-Chest\",\n    \"DM-Trail-Freestanding-PoH\",\n    \"Biggoron\",\n    \"Mountain-Summit-Fairy-Reward\",\n    \"Mountain-Storms-Grotto-Chest\",\n];\n\nexport const GORON_CITY = [\n    \"Goron-City-Leftmost-Maze-Chest\",\n    \"Goron-City-Left-Maze-Chest\",\n    \"Goron-City-Right-Maze-Chest\",\n    \"Goron-City-Pot-Freestanding-PoH\",\n    \"Rolling-Goron-as-Child\",\n    \"Link-the-Goron\",\n    \"Darunias-Joy\",\n];\n\nexport const DEATH_MOUNTAIN_CRATER = [\n    \"DM-Crater-Wall-Freestanding-PoH\",\n    \"DM-Crater-Volcano-Freestanding-PoH\",\n    \"Crater-Fairy-Reward\",\n    \"Top-of-Crater-Grotto-Chest\",\n];\n\nexport const ZORAS_RIVER = [\n    \"Frog-Ocarina-Game\",\n    \"Frogs-in-the-Rain\",\n    \"Zora-River-Lower-Freestanding-PoH\",\n    \"Zora-River-Upper-Freestanding-PoH\",\n    \"Zora-River-Plateau-Open-Grotto-Chest\",\n];\n\nexport const ZORAS_DOMAIN = [\n    \"Diving-Minigame\",\n    \"Zoras-Domain-Torch-Run\",\n    \"King-Zora-Thawed\",\n    \"Zoras-Fountain-Iceberg-Freestanding-PoH\",\n    \"Zoras-Fountain-Bottom-Freestanding-PoH\",\n    \"Zoras-Fountain-Fairy-Reward\",\n];\n\nexport const LON_LON_RANCH = [\n    \"Talons-Chickens\",\n    \"Lon-Lon-Tower-Freestanding-PoH\",\n];\n\nexport const DEKU_TREE = [\n    \"Deku-Tree-Lobby-Chest\",\n    \"Deku-Tree-Compass-Chest\",\n    \"Deku-Tree-Compass-Room-Side-Chest\",\n    \"Deku-Tree-Basement-Chest\",\n    \"Deku-Tree-Slingshot-Chest\",\n    \"Deku-Tree-Slingshot-Room-Side-Chest\",\n    \"Queen-Gohma-Heart\",\n];\n\nexport const DEKU_TREE_MQ = [\n  \"Deku-Tree-MQ-Lobby-Chest\",\n  \"Deku-Tree-MQ-Compass-Chest\",\n  \"Deku-Tree-MQ-Slingshot-Chest\",\n  \"Deku-Tree-MQ-Slingshot-Room-Back-Chest\",\n  \"Deku-Tree-MQ-Basement-Chest\",\n  \"Deku-Tree-MQ-Before-Spinning-Log-Chest\",\n  \"Deku-Tree-MQ-After-Spinning-Log-Chest\",\n  \"Queen-Gohma-Heart\",\n];\n\nexport const DODONGOS_CAVERN = [\n    \"Dodongos-Cavern-Map-Chest\",\n    \"Dodongos-Cavern-Compass-Chest\",\n    \"Dodongos-Cavern-Bomb-Flower-Platform\",\n    \"Dodongos-Cavern-Bomb-Bag-Chest\",\n    \"Dodongos-Cavern-End-of-Bridge-Chest\",\n    \"Chest-Above-King-Dodongo\",\n    \"King-Dodongo-Heart\",\n];\n\nexport const DODONGOS_CAVERN_MQ = [\n  \"Dodongos-Cavern-MQ-Map-Chest\",\n  \"Dodongos-Cavern-MQ-Bomb-Bag-Chest\",\n  \"Dodongos-Cavern-MQ-Compass-Chest\",\n  \"Dodongos-Cavern-MQ-Larva-Room-Chest\",\n  \"Dodongos-Cavern-MQ-Torch-Puzzle-Room-Chest\",\n  \"Dodongos-Cavern-MQ-Under-Grave-Chest\",\n  \"King-Dodongo-Heart\",\n];\n\nexport const JABU_JABUS_BELLY = [\n    \"Boomerang-Chest\",\n    \"Jabu-Jabus-Belly-Map-Chest\",\n    \"Jabu-Jabus-Belly-Compass-Chest\",\n    \"Barinade-Heart\",\n];\n\nexport const JABU_JABUS_BELLY_MQ = [\n  \"Jabu-Jabus-Belly-MQ-Entry-Side-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Map-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Second-Room-Lower-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Compass-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Second-Room-Upper-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Basement-North-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Basement-South-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Near-Boss-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Falling-Like-Like-Room-Chest\",\n  \"Jabu-Jabus-Belly-MQ-Boomerang-Room-Small-Chest\",\n  \"MQ-Boomerang-Chest\",\n  \"Barinade-Heart\",\n];\n\nexport const FOREST_TEMPLE = [\n    \"Forest-Temple-First-Chest\",\n    \"Forest-Temple-Chest-Behind-Lobby\",\n    \"Forest-Temple-Outside-Hookshot-Chest\",\n    \"Forest-Temple-Well-Chest\",\n    \"Forest-Temple-Map-Chest\",\n    \"Forest-Temple-Falling-Room-Chest\",\n    \"Forest-Temple-Block-Push-Chest\",\n    \"Forest-Temple-Boss-Key-Chest\",\n    \"Forest-Temple-Floormaster-Chest\",\n    \"Forest-Temple-Bow-Chest\",\n    \"Forest-Temple-Red-Poe-Chest\",\n    \"Forest-Temple-Blue-Poe-Chest\",\n    \"Forest-Temple-Near-Boss-Chest\",\n    \"Phantom-Ganon-Heart\",\n];\n\nexport const FOREST_TEMPLE_MQ = [\n  \"Forest-Temple-MQ-First-Chest\",\n  \"Forest-Temple-MQ-Chest-Behind-Lobby\",\n  \"Forest-Temple-MQ-Bow-Chest\",\n  \"Forest-Temple-MQ-NE-Outdoors-Lower-Chest\",\n  \"Forest-Temple-MQ-NE-Outdoors-Upper-Chest\",\n  \"Forest-Temple-MQ-Well-Chest\",\n  \"Forest-Temple-MQ-Map-Chest\",\n  \"Forest-Temple-MQ-Compass-Chest\",\n  \"Forest-Temple-MQ-Falling-Room-Chest\",\n  \"Forest-Temple-MQ-Near-Boss-Chest\",\n  \"Forest-Temple-MQ-Redead-Chest\",\n  \"Forest-Temple-MQ-Boss-Key-Chest\",\n  \"Phantom-Ganon-Heart\",\n];\n\nexport const BOTTOM_OF_THE_WELL = [\n    \"Bottom-of-the-Well-Front-Left-Hidden-Wall\",\n    \"Bottom-of-the-Well-Front-Center-Bombable\",\n    \"Bottom-of-the-Well-Right-Bottom-Hidden-Wall\",\n    \"Bottom-of-the-Well-Center-Large-Chest\",\n    \"Bottom-of-the-Well-Center-Small-Chest\",\n    \"Bottom-of-the-Well-Back-Left-Bombable\",\n    \"Bottom-of-the-Well-Freestanding-Key\",\n    \"Bottom-of-the-Well-Defeat-Boss\",\n    \"Bottom-of-the-Well-Invisible-Chest\",\n    \"Bottom-of-the-Well-Underwater-Front-Chest\",\n    \"Bottom-of-the-Well-Underwater-Left-Chest\",\n    \"Bottom-of-the-Well-Basement-Chest\",\n    \"Bottom-of-the-Well-Locked-Pits\",\n    \"Bottom-of-the-Well-Behind-Right-Grate\",\n];\n\nexport const BOTTOM_OF_THE_WELL_MQ = [\n  \"Bottom-of-the-Well-MQ-Map-Chest\",\n  \"Bottom-of-the-Well-MQ-Lens-Chest\",\n  \"Bottom-of-the-Well-MQ-Compass-Chest\",\n  \"Bottom-of-the-Well-MQ-Dead-Hand-Freestanding-Key\",\n  \"Bottom-of-the-Well-MQ-East-Inner-Room-Freestanding-Key\",\n];\n\nexport const FIRE_TEMPLE = [\n    \"Fire-Temple-Chest-Near-Boss\",\n    \"Fire-Temple-Fire-Dancer-Chest\",\n    \"Fire-Temple-Boss-Key-Chest\",\n    \"Volvagia-Heart\",\n    \"Fire-Temple-Big-Lava-Room-Open-Chest\",\n    \"Fire-Temple-Big-Lava-Room-Bombable-Chest\",\n    \"Fire-Temple-Boulder-Maze-Lower-Chest\",\n    \"Fire-Temple-Boulder-Maze-Upper-Chest\",\n    \"Fire-Temple-Boulder-Maze-Side-Room\",\n    \"Fire-Temple-Boulder-Maze-Bombable-Pit\",\n    \"Fire-Temple-Scarecrow-Chest\",\n    \"Fire-Temple-Map-Chest\",\n    \"Fire-Temple-Compass-Chest\",\n    \"Fire-Temple-Highest-Goron-Chest\",\n    \"Fire-Temple-Megaton-Hammer-Chest\",\n];\n\nexport const FIRE_TEMPLE_MQ = [\n  \"Fire-Temple-MQ-Chest-Near-Boss\",\n  \"Fire-Temple-MQ-Megaton-Hammer-Chest\",\n  \"Fire-Temple-MQ-Compass-Chest\",\n  \"Fire-Temple-MQ-Maze-Lower-Chest\",\n  \"Fire-Temple-MQ-Maze-Upper-Chest\",\n  \"Fire-Temple-MQ-West-Tower-Top-Chest\",\n  \"Fire-Temple-MQ-Entrance-Hallway-Small-Chest\",\n  \"Fire-Temple-MQ-Map-Chest\",\n  \"Fire-Temple-MQ-Boss-Key-Chest\",\n  \"Fire-Temple-MQ-Big-Lava-Room-Bombable-Chest\",\n  \"Fire-Temple-MQ-Maze-Side-Room\",\n  \"Fire-Temple-MQ-Freestanding-Key\",\n  \"Volvagia-Heart\",\n];\n\nexport const ICE_CAVERN = [\n    \"Ice-Cavern-Map-Chest\",\n    \"Ice-Cavern-Compass-Chest\",\n    \"Ice-Cavern-Iron-Boots-Chest\",\n    \"Ice-Cavern-Freestanding-PoH\",\n];\n\nexport const ICE_CAVERN_MQ = [\n  \"Ice-Cavern-MQ-Iron-Boots-Chest\",\n  \"Ice-Cavern-MQ-Compass-Chest\",\n  \"Ice-Cavern-MQ-Map-Chest\",\n  \"Ice-Cavern-MQ-Freestanding-PoH\",\n];\n\nexport const WATER_TEMPLE = [\n    \"Morpha-Heart\",\n    \"Water-Temple-Map-Chest\",\n    \"Water-Temple-Compass-Chest\",\n    \"Water-Temple-Cracked-Wall-Chest\",\n    \"Water-Temple-Torches-Chest\",\n    \"Water-Temple-Dragon-Chest\",\n    \"Water-Temple-Central-Bow-Target-Chest\",\n    \"Water-Temple-Boss-Key-Chest\",\n    \"Water-Temple-Central-Pillar-Chest\",\n    \"Water-Temple-Dark-Link-Chest\",\n    \"Water-Temple-River-Chest\",\n];\n\nexport const WATER_TEMPLE_MQ = [\n  \"Water-Temple-MQ-Central-Pillar-Chest\",\n  \"Water-Temple-MQ-Boss-Key-Chest\",\n  \"Water-Temple-MQ-Longshot-Chest\",\n  \"Water-Temple-MQ-Compass-Chest\",\n  \"Water-Temple-MQ-Map-Chest\",\n  \"Water-Temple-MQ-Freestanding-Key\",\n      \"Morpha-Heart\",\n];\n\nexport const SHADOW_TEMPLE = [\n    \"Shadow-Temple-Map-Chest\",\n    \"Shadow-Temple-Hover-Boots-Chest\",\n    \"Shadow-Temple-Compass-Chest\",\n    \"Shadow-Temple-Early-Silver-Rupee-Chest\",\n    \"Shadow-Temple-Invisible-Blades-Visible-Chest\",\n    \"Shadow-Temple-Invisible-Blades-Invisible-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Lower-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Upper-Chest\",\n    \"Shadow-Temple-Falling-Spikes-Switch-Chest\",\n    \"Shadow-Temple-Invisible-Spikes-Chest\",\n    \"Shadow-Temple-Freestanding-Key\",\n    \"Shadow-Temple-Wind-Hint-Chest\",\n    \"Shadow-Temple-After-Wind-Enemy-Chest\",\n    \"Shadow-Temple-After-Wind-Hidden-Chest\",\n    \"Shadow-Temple-Spike-Walls-Left-Chest\",\n    \"Shadow-Temple-Boss-Key-Chest\",\n    \"Shadow-Temple-Hidden-Floormaster-Chest\",\n    \"Bongo-Bongo-Heart\",\n];\n\nexport const SHADOW_TEMPLE_MQ = [\n  \"Shadow-Temple-MQ-Compass-Chest\",\n  \"Shadow-Temple-MQ-Hover-Boots-Chest\",\n  \"Shadow-Temple-MQ-Early-Gibdos-Chest\",\n  \"Shadow-Temple-MQ-Map-Chest\",\n  \"Shadow-Temple-MQ-Beamos-Silver-Rupees-Chest\",\n  \"Shadow-Temple-MQ-Falling-Spikes-Switch-Chest\",\n  \"Shadow-Temple-MQ-Falling-Spikes-Lower-Chest\",\n  \"Shadow-Temple-MQ-Falling-Spikes-Upper-Chest\",\n  \"Shadow-Temple-MQ-Invisible-Spikes-Chest\",\n  \"Shadow-Temple-MQ-Boss-Key-Chest\",\n  \"Shadow-Temple-MQ-Spike-Walls-Left-Chest\",\n  \"Shadow-Temple-MQ-Stalfos-Room-Chest\",\n  \"Shadow-Temple-MQ-Invisible-Blades-Invisible-Chest\",\n  \"Shadow-Temple-MQ-Invisible-Blades-Visible-Chest\",\n  \"Shadow-Temple-MQ-Bomb-Flower-Chest\",\n  \"Shadow-Temple-MQ-Wind-Hint-Chest\",\n  \"Shadow-Temple-MQ-After-Wind-Hidden-Chest\",\n  \"Shadow-Temple-MQ-After-Wind-Enemy-Chest\",\n  \"Shadow-Temple-MQ-Near-Ship-Invisible-Chest\",\n  \"Shadow-Temple-MQ-Freestanding-Key\",\n  \"Bongo-Bongo-Heart\",\n];\n\nexport const GERUDO_TRAINING_GROUNDS = [\n    \"Gerudo-Training-Grounds-Lobby-Left-Chest\",\n    \"Gerudo-Training-Grounds-Lobby-Right-Chest\",\n    \"Gerudo-Training-Grounds-Stalfos-Chest\",\n    \"Gerudo-Training-Grounds-Beamos-Chest\",\n    \"Gerudo-Training-Grounds-Hidden-Ceiling-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-First-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Second-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Third-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Path-Final-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Right-Central-Chest\",\n    \"Gerudo-Training-Grounds-Maze-Right-Side-Chest\",\n    \"Gerudo-Training-Grounds-Freestanding-Key\",\n    \"Gerudo-Training-Grounds-Underwater-Silver-Rupee-Chest\",\n    \"Gerudo-Training-Grounds-Hammer-Room-Clear-Chest\",\n    \"Gerudo-Training-Grounds-Hammer-Room-Switch-Chest\",\n    \"Gerudo-Training-Grounds-Eye-Statue-Chest\",\n    \"Gerudo-Training-Grounds-Near-Scarecrow-Chest\",\n    \"Gerudo-Training-Grounds-Before-Heavy-Block-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-First-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Second-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Third-Chest\",\n    \"Gerudo-Training-Grounds-Heavy-Block-Fourth-Chest\",\n];\n\nexport const GERUDO_TRAINING_GROUNDS_MQ = [\n  \"Gerudo-Training-Grounds-MQ-Lobby-Right-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Lobby-Left-Chest\",\n  \"Gerudo-Training-Grounds-MQ-First-Iron-Knuckle-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Before-Heavy-Block-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Eye-Statue-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Flame-Circle-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Second-Iron-Knuckle-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Dinolfos-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Ice-Arrows-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Maze-Right-Central-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Maze-Path-First-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Maze-Right-Side-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Maze-Path-Third-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Maze-Path-Second-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Hidden-Ceiling-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Underwater-Silver-Rupee-Chest\",\n  \"Gerudo-Training-Grounds-MQ-Heavy-Block-Chest\",\n];\n\nexport const SPIRIT_TEMPLE = [\n    \"Spirit-Temple-Child-Left-Chest\",\n    \"Spirit-Temple-Child-Right-Chest\",\n    \"Spirit-Temple-Child-Climb-East-Chest\",\n    \"Spirit-Temple-Child-Climb-North-Chest\",\n    \"Spirit-Temple-Compass-Chest\",\n    \"Spirit-Temple-Early-Adult-Right-Chest\",\n    \"Spirit-Temple-First-Mirror-Right-Chest\",\n    \"Spirit-Temple-First-Mirror-Left-Chest\",\n    \"Spirit-Temple-Map-Chest\",\n    \"Spirit-Temple-Sun-Block-Room-Chest\",\n    \"Spirit-Temple-Statue-Hand-Chest\",\n    \"Spirit-Temple-NE-Main-Room-Chest\",\n    \"Silver-Gauntlets-Chest\",\n    \"Mirror-Shield-Chest\",\n    \"Spirit-Temple-Near-Four-Armos-Chest\",\n    \"Spirit-Temple-Hallway-Left-Invisible-Chest\",\n    \"Spirit-Temple-Hallway-Right-Invisible-Chest\",\n    \"Spirit-Temple-Boss-Key-Chest\",\n    \"Spirit-Temple-Topmost-Chest\",\n    \"Twinrova-Heart\",\n];\n\nexport const SPIRIT_TEMPLE_MQ = [\n  \"Spirit-Temple-MQ-Entrance-Front-Left-Chest\",\n  \"Spirit-Temple-MQ-Entrance-Back-Right-Chest\",\n  \"Spirit-Temple-MQ-Entrance-Front-Right-Chest\",\n  \"Spirit-Temple-MQ-Entrance-Back-Left-Chest\",\n  \"Spirit-Temple-MQ-Child-Center-Chest\",\n  \"Spirit-Temple-MQ-Map-Chest\",\n  \"Spirit-Temple-MQ-Child-Left-Chest\",\n  \"Spirit-Temple-MQ-Child-Climb-North-Chest\",\n  \"Spirit-Temple-MQ-Child-Climb-South-Chest\",\n  \"Spirit-Temple-MQ-Compass-Chest\",\n  \"Spirit-Temple-MQ-Lower-NE-Main-Room-Chest\",\n  \"Spirit-Temple-MQ-Upper-NE-Main-Room-Chest\",\n  \"Spirit-Temple-MQ-Silver-Block-Hallway-Chest\",\n  \"Spirit-Temple-MQ-Sun-Block-Room-Chest\",\n  \"Spirit-Temple-MQ-Lower-Adult-Right-Chest\",\n  \"Spirit-Temple-MQ-Lower-Adult-Left-Chest\",\n  \"Spirit-Temple-MQ-Beamos-Room-Chest\",\n  \"Spirit-Temple-MQ-Ice-Trap-Chest\",\n  \"Spirit-Temple-MQ-Boss-Key-Chest\",\n  \"Spirit-Temple-MQ-Mirror-Puzzle-Invisible-Chest\",\n  \"Twinrova-Heart\",\n];\n\nexport const GS_DEKU_TREE = [\n  \"GS-Deku-Tree-Basement-Back-Room\",\n  \"GS-Deku-Tree-Basement-Gate\",\n  \"GS-Deku-Tree-Basement-Vines\",\n  \"GS-Deku-Tree-Compass-Room\",\n];\n\nexport const GS_DEKU_TREE_MQ = [\n  \"GS-Deku-Tree-MQ-Lobby\",\n  \"GS-Deku-Tree-MQ-Compass-Room\",\n  \"GS-Deku-Tree-MQ-Basement-Ceiling\",\n  \"GS-Deku-Tree-MQ-Basement-Back-Room\",\n];\n\nexport const GS_DODONGOS = [\n  \"GS-Dodongo's-Cavern-Vines-Above-Stairs\",\n  \"GS-Dodongo's-Cavern-Scarecrow\",\n  \"GS-Dodongo's-Cavern-Alcove-Above-Stairs\",\n  \"GS-Dodongo's-Cavern-Back-Room\",\n  \"GS-Dodongo's-Cavern-East-Side-Room\",\n];\n\nexport const GS_DODONGOS_MQ = [\n  \"GS-Dodongo's-Cavern-MQ-Scrub-Room\",\n  \"GS-Dodongo's-Cavern-MQ-Song-of-Time-Block-Room\",\n  \"GS-Dodongo's-Cavern-MQ-Lizalfos-Room\",\n  \"GS-Dodongo's-Cavern-MQ-Larva-Room\",\n  \"GS-Dodongo's-Cavern-MQ-Back-Area\",\n];\n\nexport const GS_JABU_JABU = [\n  \"GS-Jabu-Jabu-Lobby-Basement-Lower\",\n  \"GS-Jabu-Jabu-Lobby-Basement-Upper\",\n  \"GS-Jabu-Jabu-Near-Boss\",\n  \"GS-Jabu-Jabu-Water-Switch-Room\",\n];\n\nexport const GS_JABU_JABU_MQ = [\n  \"GS-Jabu-Jabu-MQ-Tailpasaran-Room\",\n  \"GS-Jabu-Jabu-MQ-Invisible-Enemies-Room\",\n  \"GS-Jabu-Jabu-MQ-Boomerang-Room\",\n  \"GS-Jabu-Jabu-MQ-Near-Boss\",\n];\n\nexport const GS_FOREST_TEMPLE = [\n  \"GS-Forest-Temple-Outdoor-East\",\n  \"GS-Forest-Temple-First-Room\",\n  \"GS-Forest-Temple-Outdoor-West\",\n  \"GS-Forest-Temple-Lobby\",\n  \"GS-Forest-Temple-Basement\",\n];\n\nexport const GS_FOREST_TEMPLE_MQ = [\n  \"GS-Forest-Temple-MQ-First-Hallway\",\n  \"GS-Forest-Temple-MQ-Block-Push-Room\",\n  \"GS-Forest-Temple-MQ-Outdoor-East\",\n  \"GS-Forest-Temple-MQ-Outdoor-West\",\n  \"GS-Forest-Temple-MQ-Well\",\n];\n\nexport const GS_FIRE_TEMPLE = [\n  \"GS-Fire-Temple-Song-of-Time-Room\",\n  \"GS-Fire-Temple-Basement\",\n  \"GS-Fire-Temple-Unmarked-Bomb-Wall\",\n  \"GS-Fire-Temple-East-Tower-Top\",\n  \"GS-Fire-Temple-East-Tower-Climb\",\n];\n\nexport const GS_FIRE_TEMPLE_MQ = [\n  \"GS-Fire-Temple-MQ-Above-Fire-Wall-Maze\",\n  \"GS-Fire-Temple-MQ-Fire-Wall-Maze-Center\",\n  \"GS-Fire-Temple-MQ-Big-Lava-Room\",\n  \"GS-Fire-Temple-MQ-Fire-Wall-Maze-Side-Room\",\n  \"GS-Fire-Temple-MQ-East-Tower-Top\",\n];\n\nexport const GS_WATER_TEMPLE = [\n  \"GS-Water-Temple-South-Basement\",\n  \"GS-Water-Temple-Falling-Platform-Room\",\n  \"GS-Water-Temple-Central-Room\",\n  \"GS-Water-Temple-Near-Boss-Key-Chest\",\n  \"GS-Water-Temple-Serpent-River\",\n];\n\nexport const GS_WATER_TEMPLE_MQ = [\n  \"GS-Water-Temple-MQ-Before-Upper-Water-Switch\",\n  \"GS-Water-Temple-MQ-North-Basement\",\n  \"GS-Water-Temple-MQ-Lizalfos-Hallway\",\n  \"GS-Water-Temple-MQ-Serpent-River\",\n  \"GS-Water-Temple-MQ-South-Basement\",\n];\n\nexport const GS_SPIRIT_TEMPLE = [\n  \"GS-Spirit-Temple-Hall-to-West-Iron-Knuckle\",\n  \"GS-Spirit-Temple-Boulder-Room\",\n  \"GS-Spirit-Temple-Lobby\",\n  \"GS-Spirit-Temple-Bomb-for-Light-Room\",\n  \"GS-Spirit-Temple-Metal-Fence\",\n];\n\nexport const GS_SPIRIT_TEMPLE_MQ = [\n  \"GS-Spirit-Temple-MQ-Lower-Adult-Right\",\n  \"GS-Spirit-Temple-MQ-Lower-Adult-Left\",\n  \"GS-Spirit-Temple-MQ-Iron-Knuckle-West\",\n  \"GS-Spirit-Temple-MQ-Iron-Knuckle-North\",\n  \"GS-Spirit-Temple-MQ-Sun-Block-Room\",\n];\n\nexport const GS_SHADOW_TEMPLE = [\n  \"GS-Shadow-Temple-Single-Giant-Pot\",\n  \"GS-Shadow-Temple-Crusher-Room\",\n  \"GS-Shadow-Temple-Triple-Giant-Pot\",\n  \"GS-Shadow-Temple-Like-Like-Room\",\n  \"GS-Shadow-Temple-Near-Ship\",\n];\n\nexport const GS_SHADOW_TEMPLE_MQ = [\n  \"GS-Shadow-Temple-MQ-Crusher-Room\",\n  \"GS-Shadow-Temple-MQ-Wind-Hint-Room\",\n  \"GS-Shadow-Temple-MQ-After-Wind\",\n  \"GS-Shadow-Temple-MQ-After-Ship\",\n  \"GS-Shadow-Temple-MQ-Near-Boss\",\n];\n\nexport const GS_BOTTOM_OF_THE_WELL = [\n  \"GS-Well-Like-Like-Cage\",\n  \"GS-Well-East-Inner-Room\",\n  \"GS-Well-West-Inner-Room\",\n]\n\nexport const GS_BOTTOM_OF_THE_WELL_MQ = [\n  \"GS-Well-MQ-Basement\",\n  \"GS-Well-MQ-Coffin-Room\",\n  \"GS-Well-MQ-West-Inner-Room\",\n]\n\nexport const GS_ICE_CAVERN = [\n  \"GS-Ice-Cavern-Push-Block-Room\",\n  \"GS-Ice-Cavern-Spinning-Scythe-Room\",\n  \"GS-Ice-Cavern-Heart-Piece-Room\",\n];\n\nexport const GS_ICE_CAVERN_MQ = [\n  \"GS-Ice-Cavern-MQ-Scarecrow\",\n  \"GS-Ice-Cavern-MQ-Ice-Block\",\n  \"GS-Ice-Cavern-MQ-Red-Ice\",\n];\n\nexport const GS_HYRULE_FIELD = [\n  \"GS-Hyrule-Field-Near-Gerudo-Valley\",\n  \"GS-Hyrule-Field-near-Kakariko\",\n  \"GS-Lon-Lon-Ranch-Back-Wall\",\n  \"GS-Lon-Lon-Ranch-Rain-Shed\",\n  \"GS-Lon-Lon-Ranch-House-Window\",\n  \"GS-Lon-Lon-Ranch-Tree\",\n];\n\nexport const GS_KOKIRI_FOREST = [\n  \"GS-Kokiri-Bean-Patch\",\n  \"GS-Kokiri-Know-It-All-House\",\n  \"GS-Kokiri-House-of-Twins\",\n  \"GS-Lost-Woods-Bean-Patch-Near-Bridge\",\n  \"GS-Lost-Woods-Bean-Patch-Near-Stage\",\n  \"GS-Lost-Woods-Above-Stage\",\n  \"GS-Sacred-Forest-Meadow\",\n];\n\nexport const GS_HYRULE_CASTLE = [\n  \"GS-Outside-Ganon's-Castle\",\n  \"GS-Hyrule-Castle-Grotto\",\n  \"GS-Hyrule-Castle-Tree\",\n  \"GS-Castle-Market-Guard-House\",\n];\n\nexport const GS_DEATH_MOUNTAIN = [\n  \"GS-Mountain-Crater-Bean-Patch\",\n  \"GS-Mountain-Trail-Bean-Patch\",\n  \"GS-Mountain-Trail-Bomb-Alcove\",\n  \"GS-Mountain-Trail-Above-Dodongo's-Cavern\",\n  \"GS-Mountain-Trail-Path-to-Crater\",\n  \"GS-Goron-City-Center-Platform\",\n  \"GS-Goron-City-Boulder-Maze\",\n  \"GS-Death-Mountain-Crater-Crate\",\n];\n\nexport const GS_KAKARIKO = [\n  \"GS-Kakariko-House-Under-Construction\",\n  \"GS-Kakariko-Skulltula-House\",\n  \"GS-Kakariko-Guard's-House\",\n  \"GS-Kakariko-Tree\",\n  \"GS-Kakariko-Watchtower\",\n  \"GS-Kakariko-Above-Impa's-House\",\n  \"GS-Graveyard-Wall\",\n  \"GS-Graveyard-Bean-Patch\",\n];\n\nexport const GS_ZORAS_RIVER = [\n  \"GS-Zora-River-Ladder\",\n  \"GS-Zora-River-Tree\",\n  \"GS-Zora's-Fountain-Above-the-Log\",\n  \"GS-Zora-River-Above-Bridge\",\n  \"GS-Zora-River-Near-Raised-Grottos\",\n  \"GS-Zora's-Fountain-Hidden-Cave\",\n  \"GS-Zora's-Domain-Frozen-Waterfall\",\n  \"GS-Zora's-Fountain-Tree\",\n];\n\nexport const GS_LAKE_HYLIA = [\n  \"GS-Lake-Hylia-Bean-Patch\",\n  \"GS-Lake-Hylia-Small-Island\",\n  \"GS-Lake-Hylia-Lab-Wall\",\n  \"GS-Lab-Underwater-Crate\",\n  \"GS-Lake-Hylia-Giant-Tree\",\n];\n\nexport const GS_DESERT = [\n  \"GS-Gerudo-Valley-Bean-Patch\",\n  \"GS-Gerudo-Valley-Small-Bridge\",\n  \"GS-Gerudo-Valley-Pillar\",\n  \"GS-Gerudo-Valley-Behind-Tent\",\n  \"GS-Gerudo-Fortress-Archery-Range\",\n  \"GS-Gerudo-Fortress-Top-Floor\",\n  \"GS-Desert-Colossus-Bean-Patch\",\n  \"GS-Wasteland-Ruins\",\n  \"GS-Desert-Colossus-Hill\",\n  \"GS-Desert-Colossus-Tree\",\n];\n\nexport const KOKIRI_SHOP = [\n  \"Kokiri-Shop-Item-1\",\n  \"Kokiri-Shop-Item-2\",\n  \"Kokiri-Shop-Item-3\",\n  \"Kokiri-Shop-Item-4\",\n  \"Kokiri-Shop-Item-5\",\n  \"Kokiri-Shop-Item-6\",\n  \"Kokiri-Shop-Item-7\",\n  \"Kokiri-Shop-Item-8\",\n];\n\nexport const KAKARIKO_POTION_SHOP = [\n  \"Kakariko-Potion-Shop-Item-1\",\n  \"Kakariko-Potion-Shop-Item-2\",\n  \"Kakariko-Potion-Shop-Item-3\",\n  \"Kakariko-Potion-Shop-Item-4\",\n  \"Kakariko-Potion-Shop-Item-5\",\n  \"Kakariko-Potion-Shop-Item-6\",\n  \"Kakariko-Potion-Shop-Item-7\",\n  \"Kakariko-Potion-Shop-Item-8\",\n];\n\nexport const BOMBCHU_SHOP = [\n  \"Bombchu-Shop-Item-1\",\n  \"Bombchu-Shop-Item-2\",\n  \"Bombchu-Shop-Item-3\",\n  \"Bombchu-Shop-Item-4\",\n  \"Bombchu-Shop-Item-5\",\n  \"Bombchu-Shop-Item-6\",\n  \"Bombchu-Shop-Item-7\",\n  \"Bombchu-Shop-Item-8\",\n];\n\nexport const MARKET_POTION_SHOP = [\n  \"Castle-Town-Potion-Shop-Item-1\",\n  \"Castle-Town-Potion-Shop-Item-2\",\n  \"Castle-Town-Potion-Shop-Item-3\",\n  \"Castle-Town-Potion-Shop-Item-4\",\n  \"Castle-Town-Potion-Shop-Item-5\",\n  \"Castle-Town-Potion-Shop-Item-6\",\n  \"Castle-Town-Potion-Shop-Item-7\",\n  \"Castle-Town-Potion-Shop-Item-8\",\n];\n\nexport const MARKET_BAZAAR_SHOP = [\n  \"Castle-Town-Bazaar-Item-1\",\n  \"Castle-Town-Bazaar-Item-2\",\n  \"Castle-Town-Bazaar-Item-3\",\n  \"Castle-Town-Bazaar-Item-4\",\n  \"Castle-Town-Bazaar-Item-5\",\n  \"Castle-Town-Bazaar-Item-6\",\n  \"Castle-Town-Bazaar-Item-7\",\n  \"Castle-Town-Bazaar-Item-8\",\n];\n\nexport const KAKARIKO_BAZAAR_SHOP = [\n  \"Kakariko-Bazaar-Item-1\",\n  \"Kakariko-Bazaar-Item-2\",\n  \"Kakariko-Bazaar-Item-3\",\n  \"Kakariko-Bazaar-Item-4\",\n  \"Kakariko-Bazaar-Item-5\",\n  \"Kakariko-Bazaar-Item-6\",\n  \"Kakariko-Bazaar-Item-7\",\n  \"Kakariko-Bazaar-Item-8\",\n];\n\nexport const ZORA_SHOP = [\n  \"Zora-Shop-Item-1\",\n  \"Zora-Shop-Item-2\",\n  \"Zora-Shop-Item-3\",\n  \"Zora-Shop-Item-4\",\n  \"Zora-Shop-Item-5\",\n  \"Zora-Shop-Item-6\",\n  \"Zora-Shop-Item-7\",\n  \"Zora-Shop-Item-8\",\n];\n\nexport const GORON_SHOP = [\n  \"Goron-Shop-Item-1\",\n  \"Goron-Shop-Item-2\",\n  \"Goron-Shop-Item-3\",\n  \"Goron-Shop-Item-4\",\n  \"Goron-Shop-Item-5\",\n  \"Goron-Shop-Item-6\",\n  \"Goron-Shop-Item-7\",\n  \"Goron-Shop-Item-8\",\n];\n\nexport const DODONGOS_CAVERN_SCRUB = [\n  \"DC-Deku-Scrub-Deku-Nuts\",\n  \"DC-Deku-Scrub-Deku-Sticks\",\n  \"DC-Deku-Scrub-Deku-Seeds\",\n  \"DC-Deku-Scrub-Deku-Shield\",\n];\n\nexport const JABU_JABUS_BELLY_SCRUB = [\n\"Jabu-Deku-Scrub-Deku-Nuts\",\n];\n\nexport const GANONS_CASTLE_SCRUB = [\n  \"GC-Deku-Scrub-Bombs\",\n  \"GC-Deku-Scrub-Arrows\",\n  \"GC-Deku-Scrub-Red-Potion\",\n  \"GC-Deku-Scrub-Green-Potion\",\n];\n\nexport const GS_DEKU_TREE_SCRUB_MQ = [\n\"DT-MQ-Deku-Scrub-Deku-Shield\",\n];\n\nexport const DODONGOS_CAVERN_SCRUB_MQ = [\n  \"DC-MQ-Deku-Scrub-Deku-Sticks\",\n  \"DC-MQ-Deku-Scrub-Deku-Seeds\",\n  \"DC-MQ-Deku-Scrub-Deku-Shield\",\n  \"DC-MQ-Deku-Scrub-Red-Potion\",\n];\n\nexport const GANONS_CASTLE_SCRUB_MQ = [\n  \"GC-MQ-Deku-Scrub-Deku-Nuts\",\n  \"GC-MQ-Deku-Scrub-Bombs\",\n  \"GC-MQ-Deku-Scrub-Arrows\",\n  \"GC-MQ-Deku-Scrub-Red-Potion\",\n  \"GC-MQ-Deku-Scrub-Green-Potion\",\n];\n\nexport const ZORAS_RIVER_SCRUB = [\n  \"ZR-Grotto-Deku-Scrub-Red-Potion\",\n  \"ZR-Grotto-Deku-Scrub-Green-Potion\",\n];\n\nexport const SACRED_FOREST_MEADOW_SCRUB = [\n  \"SFM-Grotto-Deku-Scrub-Red-Potion\",\n  \"SFM-Grotto-Deku-Scrub-Green-Potion\",\n];\n\nexport const LAKE_HYLIA_SCRUB = [\n  \"LH-Grotto-Deku-Scrub-Deku-Nuts\",\n  \"LH-Grotto-Deku-Scrub-Bombs\",\n  \"LH-Grotto-Deku-Scrub-Arrows\",\n];\n\nexport const GERUDO_VALLEY_SCRUB = [\n  \"Valley-Grotto-Deku-Scrub-Red-Potion\",\n  \"Valley-Grotto-Deku-Scrub-Green-Potion\",\n];\n\nexport const LOST_WOODS_SCRUB = [\n  \"LW-Deku-Scrub-Deku-Nuts\",\n  \"LW-Deku-Scrub-Deku-Sticks\",\n  \"LW-Grotto-Deku-Scrub-Arrows\",\n];\n\nexport const DESERT_COLOSSUS_SCRUB = [\n  \"Desert-Grotto-Deku-Scrub-Red-Potion\",\n  \"Desert-Grotto-Deku-Scrub-Green-Potion\",\n];\n\nexport const DEATH_MOUNTAIN_CRATER_SCRUB = [\n  \"DMC-Deku-Scrub-Bombs\",\n  \"DMC-Grotto-Deku-Scrub-Deku-Nuts\",\n  \"DMC-Grotto-Deku-Scrub-Bombs\",\n  \"DMC-Grotto-Deku-Scrub-Arrows\",\n];\n\nexport const GORON_CITY_SCRUB = [\n  \"Goron-Grotto-Deku-Scrub-Deku-Nuts\",\n  \"Goron-Grotto-Deku-Scrub-Bombs\",\n  \"Goron-Grotto-Deku-Scrub-Arrows\",\n];\n\nexport const LON_LON_RANCH_SCRUB = [\n  \"LLR-Grotto-Deku-Scrub-Deku-Nuts\",\n  \"LLR-Grotto-Deku-Scrub-Bombs\",\n  \"LLR-Grotto-Deku-Scrub-Arrows\",\n];\n\nexport const POTS = [\n  \"Goron-City-Stick-Pot\",\n  \"Bottom-of-the-Well-Stick-Pot\",\n  \"Zoras-Domain-Stick-Pot\",\n  \"Zoras-Domain-Nut-Pot\",\n];\n\nexport const ENEMIES = [\n  \"Deku-Baba-Sticks\",\n  \"Deku-Baba-Nuts\",\n];\n\nexport const OTHER = [\n  \"Epona\",\n  \"Spirit-Temple-Nut-Crate\",\n  \"Gerudo-Fortress-Carpenter-Rescue\",\n];\n\nexport const LOCATIONS = {\n  \"The Forest\":{\n    'Kokiri Forest': KOKIRI_FOREST,\n    'Lost Woods': LOST_WOODS,\n    'Deku Tree': DEKU_TREE,\n    'Sacred Forest Meadow': SACRED_FOREST_MEADOW,\n    'Forest Temple': FOREST_TEMPLE,\n  },\n  \"Zora's Domain\":{\n    'Zoras River': ZORAS_RIVER,\n    'Zoras Domain': ZORAS_DOMAIN,\n    'Jabu Jabus Belly': JABU_JABUS_BELLY,\n    'Ice Cavern': ICE_CAVERN,\n  },\n  \"Death Mountain\":{\n    'Death Mountain Trail': DEATH_MOUNTAIN_TRAIL,\n    'Goron City': GORON_CITY,\n    'Dodongos Cavern': DODONGOS_CAVERN,\n    'Death Mountain Crater': DEATH_MOUNTAIN_CRATER,\n    'Fire Temple': FIRE_TEMPLE,\n  },\n  \"Hyrule Field\":{\n    'Hyrule Field': HYRULE_FIELD,\n    'Lon Lon Ranch': LON_LON_RANCH,\n  },\n  \"Hyrule Castle\":{\n    'Market': MARKET,\n    'Hyrule Castle': HYRULE_CASTLE,\n    'Ganons Castle': GANONS_CASTLE,\n  },\n  \"Kakariko\":{\n    'Kakariko Village': KAKARIKO_VILLAGE,\n    'Bottom of the Well': BOTTOM_OF_THE_WELL,\n    'Shadow Temple': SHADOW_TEMPLE,\n  },\n  \"Lake Hylia\":{\n    'Lake Hylia': LAKE_HYLIA,\n    'Water Temple': WATER_TEMPLE,\n  },\n  \"The Desert\":{\n    'Gerudo Valley': GERUDO_VALLEY,\n    'Gerudo Fortress': GERUDO_FORTRESS,\n    'Gerudo Training Grounds': GERUDO_TRAINING_GROUNDS,\n    'Wasteland': WASTELAND,\n    'Desert Colossus': DESERT_COLOSSUS,\n    'Spirit Temple': SPIRIT_TEMPLE\n  },\n  \"Miscellaneous\":{\n    'Prizes': PRIZES,\n    'Songs': SONG_LOCATIONS,\n    \"Pots\": POTS,\n    \"Enemies\": ENEMIES,\n    \"Other\": OTHER,\n  },\n  \"Gold Skulltulas\":\n  {\n    \"Deku Tree\": GS_DEKU_TREE,\n    \"Dodongo\": GS_DODONGOS,\n    \"Jaby Jabu\": GS_JABU_JABU,\n    \"Forest Temple\": GS_FOREST_TEMPLE,\n    \"Fire Temple\": GS_FOREST_TEMPLE,\n    \"Water Temple\": GS_WATER_TEMPLE,\n    \"Shadow Temple\": GS_SHADOW_TEMPLE,\n    \"Spirit Temple\": GS_SPIRIT_TEMPLE,\n    \"Bottom of the Well\": GS_BOTTOM_OF_THE_WELL,\n    \"Ice Cavern\": GS_ICE_CAVERN,\n    \"Hyrule Field\": GS_HYRULE_FIELD,\n    \"Kokiri Forest\": GS_KOKIRI_FOREST,\n    \"Hyrule Castle\": GS_HYRULE_CASTLE,\n    \"Death Moutain\": GS_DEATH_MOUNTAIN,\n    \"Kakariko\": GS_KAKARIKO,\n    \"Zora's River\": GS_ZORAS_RIVER,\n    \"Lake Hylia\": GS_LAKE_HYLIA,\n    \"Desert\": GS_DESERT\n\n  },\n  \"Shops\":{\n    \"Kokiri\": KOKIRI_SHOP,\n    \"Goron\": GORON_SHOP,\n    \"Zora\": ZORA_SHOP,\n    \"Market Potion\": MARKET_POTION_SHOP,\n    \"Market Bazaar\": MARKET_BAZAAR_SHOP,\n    \"Bombchu\": BOMBCHU_SHOP,\n    \"Kakariko Potion\": KAKARIKO_POTION_SHOP,\n    \"Kakariko Bazaar\": KAKARIKO_BAZAAR_SHOP,\n  },\n  \"Scrubs\":{\n    \"Dodongos\": DODONGOS_CAVERN_SCRUB,\n    \"Jabu Jabu\": JABU_JABUS_BELLY_SCRUB,\n    \"Ganon's Castle\": GANONS_CASTLE_SCRUB,\n    \"Lon Lon Ranch\": LON_LON_RANCH_SCRUB,\n    \"Zora's River\": ZORAS_RIVER_SCRUB,\n    \"Lost Woods\": LOST_WOODS_SCRUB,\n    \"Sacred Forest Meadow\": SACRED_FOREST_MEADOW_SCRUB,\n    \"Goron City\": GORON_CITY_SCRUB,\n    \"Death Moutain Crater\": DEATH_MOUNTAIN_CRATER_SCRUB,\n    \"Lake Hylia\": LAKE_HYLIA_SCRUB,\n    \"Gerudo Valley\": GERUDO_VALLEY_SCRUB,\n    \"Desert Colossus\": DESERT_COLOSSUS_SCRUB,\n\n\n  }\n};\n","import React, { Component } from 'react';\nimport DroppableLocation from './DroppableLocation';\nimport { LOCATIONS, ITEMS, ITEM_COPIES, JUNK_POOL } from './Constants';\nimport { Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { MersenneTwister19937, pick as randomPick } from 'random-js';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    textAlign: 'center',\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst junkPool = {...JUNK_POOL};\nconst mt = MersenneTwister19937.autoSeed();\n\nconst assignJunk = () => {\n    let keys = Object.keys(junkPool);\n    if(!keys.length) {\n        throw Error('Exhausted junk pool while assigning blank locations!');\n    }\n    let item = randomPick(mt, keys);\n    junkPool[item] -= 1;\n    if(junkPool[item] === 0) {\n        delete junkPool[item];\n    }\n    return item;\n}\n\nexport default class Locations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                this.state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let locationGroup of Object.values(LOCATIONS)) {\n            for(let locationArea of Object.values(locationGroup)) {\n              for(let location of locationArea){\n                this.state[location] = [];\n              }\n            }\n        }\n    }\n\n    reset = () => {\n        let state = {\n            unassigned: []\n        };\n        for(let item of ITEMS) {\n            for(let i = 0, numCopies = ITEM_COPIES[item]||1; i < numCopies; ++i) {\n                state.unassigned.push(item+(numCopies > 1 ? '-' + (i+1) : ''));\n            }\n        }\n        for(let locationGroup of Object.values(LOCATIONS)) {\n            for(let locationArea of Object.values(locationGroup)) {\n              for(let location of locationArea){\n                state[location] = [];\n              }\n            }\n        }\n        this.setState(state);\n    }\n\n    getList = id => this.state[id];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n\n            let state = { [source.droppableId]: items };\n\n            this.setState(state);\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n\n            this.setState({\n                ...result\n            });\n        }\n    };\n\n    export = () => {\n        try {\n            let result = {};\n            Object.entries(this.state).forEach(([key, value]) => {\n                if(key !== 'unassigned') {\n                    if(value.length) {\n                        let [item] = value;\n                        if(/^([a-z]|\\s)+(?:\\s\\d+)$/i.test(item)) {\n                            item = item.split('-').slice(0, -1).join(' ');\n                        } else {\n                            item = item.split('-').join(' ');\n                        }\n                        result[key.split('-').join(' ')] = item;\n                    } else {\n                        result[key.split('-').join(' ')] = assignJunk();\n                    }\n                }\n            });\n            let json = '\"locations\": ' + JSON.stringify(result);\n            let html = \"<code>\" + json + \"</code>\";\n            let blob = new Blob([html], {type: 'text/html'});\n            let blobURL = URL.createObjectURL(blob);\n            window.open(blobURL);\n        } catch(e) {\n            alert(e.message)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{display: 'inline-block', width: \"100%\"}}>\n                <button style={{float: 'right'}} type='button' name='reset' onClick={this.reset}>Reset</button>\n                <button style={{float: 'right'}} type='button' name='export' onClick={this.export}>Export</button>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div style={{display: 'inline-block', width: \"100%\"}}>\n                        <div style={{display: 'inline-block', marginLeft: '20px', maxHeight: '95vh', overflowY: 'auto', float: 'left', width: '225px'}}>\n                            <DroppableLocation\n                                key='unassigned'\n                                droppableId='unassigned'\n                                name='Unassigned'>\n                                {this.state.unassigned.map((item, index) => (\n                                    <Draggable\n                                        key={item}\n                                        draggableId={item}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}>\n                                                {item.split('-').join(' ')}\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                            </DroppableLocation>\n                        </div>\n                        <div style={\n                            {\n                                width: 'calc(100% - 300px)',\n                                float: 'left',\n                                marginLeft: '20px',\n                            }\n                        }>\n                            <Tabs>\n                                <TabList>\n                                {Object.keys(LOCATIONS).map(locationGroup => (\n                                    <Tab key={locationGroup.split(' ').join('-')}>{locationGroup}</Tab>\n                                ))}\n                                </TabList>\n                                {\n                                  Object.keys(LOCATIONS).map((locationGroup) => (\n                                    <TabPanel>\n                                      <h1>{locationGroup}</h1>\n                                      <Tabs>\n                                        <TabList>\n                                          {Object.keys(LOCATIONS[locationGroup]).map((locationName) =>(\n                                            <Tab key={locationName.split(' ').join('-')}>{locationName}</Tab>\n                                          ))}\n                                        </TabList>\n                                          {Object.entries(LOCATIONS[locationGroup]).map(([locationName, locationArray]) => (\n                                            <TabPanel>\n                                                  <div style={{\n                                                      display: 'flex',\n                                                      flexWrap: 'wrap',\n                                                      justifyContent: 'space-around',\n                                                      maxHeight: '75vh',\n                                                      overflowY: 'auto'\n                                                  }}>\n                                                  {locationArray.map((location) => (\n                                                    <DroppableLocation\n                                                      key={location}\n                                                      droppableId={location}\n                                                      name={location.split('-').join(' ')}\n                                                      style={{flex: 1}}\n                                                      isDropDisabled={this.state[location].length > 0}>\n\n                                                      {this.state[location].map((item, index) => (\n                                                          <Draggable\n                                                              key={item}\n                                                              draggableId={item}\n                                                              index={index}>\n                                                              {(provided, snapshot) => (\n                                                                  <div\n                                                                      ref={provided.innerRef}\n                                                                      {...provided.draggableProps}\n                                                                      {...provided.dragHandleProps}\n                                                                      style={getItemStyle(\n                                                                          snapshot.isDragging,\n                                                                          provided.draggableProps.style\n                                                                      )}>\n                                                                      {item.split('-').join(' ')}\n                                                                  </div>\n                                                              )}\n                                                          </Draggable>\n                                                      ))}\n                                                    </DroppableLocation>\n                                                ))\n                                              }\n                                            </div>\n                                            </TabPanel>\n                                          ))}\n                                      </Tabs>\n                                    </TabPanel>\n                                  )\n                                )}\n                            </Tabs>\n                        </div>\n                    </div>\n                </DragDropContext>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Locations from './Locations';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Locations />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}